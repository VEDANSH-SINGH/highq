{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ved17\\\\Desktop\\\\Highq_node\\\\highq\\\\src\\\\components\\\\DropDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = ({\n  options,\n  selected,\n  onSelectedChange\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = e => {\n      if (ref.current.contains(e.target)) {\n        return;\n      } else {\n        setOpen(false);\n      }\n    };\n\n    document.body.addEventListener(\"click\", onBodyClick);\n    return () => {\n      document.body.removeEventListener(\"click\", onBodyClick);\n    };\n  }, []);\n  const renderedOption = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          onSelectedChange(option);\n        },\n        className: \"item\",\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [\"]\", /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setOpen(!open);\n        },\n        className: `ui selection dropdown ${open ? \"visible active\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setOpen(!open);\n          },\n          className: `menu ${open ? \"visible transition\" : \"\"}`,\n          children: renderedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/ved17/Desktop/Highq_node/highq/src/components/DropDown.js"],"names":["React","useState","useRef","useEffect","DropDown","options","selected","onSelectedChange","open","setOpen","ref","onBodyClick","e","current","contains","target","document","body","addEventListener","removeEventListener","renderedOption","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA;;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGR,MAAM,EAAlB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAIC,CAAD,IAAO;AACzB,UAAIF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,CAAC,CAACG,MAAvB,CAAJ,EAAoC;AAClC;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAND;;AAOAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,WAAxC;AACA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CR,WAA3C;AACD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;AAaA,QAAMS,cAAc,GAAGf,OAAO,CAACgB,GAAR,CAAaC,MAAD,IAAY;AAC7C,QAAIA,MAAM,CAACC,KAAP,KAAiBjB,QAAQ,CAACiB,KAA9B,EAAqC;AACnC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,0BACE;AAEE,QAAA,OAAO,EAAE,MAAM;AACbhB,UAAAA,gBAAgB,CAACe,MAAD,CAAhB;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,MALZ;AAAA,kBAOGA,MAAM,CAACE;AAPV,SACOF,MAAM,CAACC,KADd;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;AACF,GAhBsB,CAAvB;AAiBA,sBACE;AAAK,IAAA,GAAG,EAAEb,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,mCAEE;AACE,QAAA,OAAO,EAAE,MAAM;AACbD,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,SAHH;AAIE,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAJnE;AAAA,gCAME;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACkB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,OAAO,EAAE,MAAM;AACbf,YAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,WAHH;AAIE,UAAA,SAAS,EAAG,QAAOA,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAJtD;AAAA,oBAMGY;AANH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzDD;;GAAMhB,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nconst DropDown = ({ options, selected, onSelectedChange }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    const onBodyClick = (e) => {\r\n      if (ref.current.contains(e.target)) {\r\n        return;\r\n      } else {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.body.addEventListener(\"click\", onBodyClick);\r\n    return () => {\r\n      document.body.removeEventListener(\"click\", onBodyClick);\r\n    };\r\n  }, []);\r\n  const renderedOption = options.map((option) => {\r\n    if (option.value === selected.value) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <div\r\n          key={option.value}\r\n          onClick={() => {\r\n            onSelectedChange(option);\r\n          }}\r\n          className=\"item\"\r\n        >\r\n          {option.label}\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <div ref={ref} className=\"ui form\">\r\n      <div className=\"field\">\r\n        ]\r\n        <div\r\n          onClick={() => {\r\n            setOpen(!open);\r\n          }}\r\n          className={`ui selection dropdown ${open ? \"visible active\" : \"\"}`}\r\n        >\r\n          <i className=\"dropdown icon\"></i>\r\n          <div className=\"text\">{selected.label}</div>\r\n          <div\r\n            onClick={() => {\r\n              setOpen(!open);\r\n            }}\r\n            className={`menu ${open ? \"visible transition\" : \"\"}`}\r\n          >\r\n            {renderedOption}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}