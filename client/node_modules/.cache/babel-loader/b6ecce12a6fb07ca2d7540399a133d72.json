{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ved17\\\\Desktop\\\\highq\\\\src\\\\components\\\\HeroCarousel.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SlideShow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeIndex: 0,\n      nextActiveIndex: 0,\n      activeIndexClasses: [\"active-slide\"],\n      nextActiveIndexClasses: [],\n      disablePrevNext: false,\n      xCoordinate: null\n    };\n    this.direction = \"to-left\";\n    this.slideTimeOut = this.props.activeSlideDuration ? this.props.activeSlideDuration : 3000;\n    this.animationDuration = 600;\n    this.interactionMode = this.props.interactionMode ? this.props.interactionMode : \"swipe\";\n\n    this.unify = e => e.changedTouches ? e.changedTouches[0] : e;\n\n    this.getSetXCoordinate = e => this.setState({\n      xCoordinate: this.unify(e).clientX\n    });\n\n    this.moveSlide = e => {\n      const {\n        xCoordinate\n      } = this.state;\n\n      if (xCoordinate || xCoordinate === 0) {\n        let dx = this.unify(e).clientX - xCoordinate,\n            s = Math.sign(dx);\n\n        if (s < 0) {\n          this.nextSlide();\n        } else if (s > 0) {\n          this.prevSlide();\n        }\n      }\n    };\n\n    this.animateSliding = () => {\n      let activeIndexClasses = [];\n      let nextActiveIndexClasses = []; // attach the following classes if the user click the next button\n\n      if (this.direction === \"to-left\") {\n        activeIndexClasses.push(\"active-slide\", \"exit-to-left\");\n        nextActiveIndexClasses.push(\"active-slide\", \"next-active-slide\", \"enter-to-left\");\n      } else {\n        // attach the following classes if the user click the prev button\n        activeIndexClasses.push(\"active-slide\", \"exit-to-right\");\n        nextActiveIndexClasses.push(\"active-slide\", \"next-active-slide\", \"enter-to-right\");\n      }\n\n      this.setState({\n        activeIndexClasses: activeIndexClasses,\n        nextActiveIndexClasses: nextActiveIndexClasses\n      });\n    };\n\n    this.startAutoSliding = () => {\n      const {\n        autoPlay\n      } = this.props;\n      this.autoSlide = autoPlay ? setInterval(this.nextSlide, this.slideTimeOut) : null;\n    };\n\n    this.stopAutoSliding = () => {\n      clearInterval(this.autoSlide);\n    };\n\n    this.restartAutoSliding = nextAcIn => {\n      this.setState({\n        nextActiveIndex: nextAcIn,\n        disablePrevNext: true\n      }); // attach the required classes to animate the transition between slides\n\n      this.animateSliding(); // reset classes and enable prev & next btns after the animation duration\n\n      this.setActiveSlide(nextAcIn); // restart auto sliding\n\n      this.startAutoSliding();\n    };\n\n    this.setActiveSlide = nextActiveI => {\n      setTimeout(() => {\n        this.setState({\n          activeIndex: nextActiveI,\n          activeIndexClasses: [\"active-slide\"],\n          nextActiveIndexClasses: [],\n          disablePrevNext: false\n        });\n      }, this.animationDuration);\n    };\n\n    this.nextSlide = () => {\n      const {\n        activeIndex\n      } = this.state;\n      const {\n        children\n      } = this.props; //stop auto sliding (so that when user click the next button we can reset the timer for auto sliding)\n\n      this.stopAutoSliding(); // set direction to left because slide is coming from the right side to the view port\n\n      this.direction = \"to-left\"; // set the next active index\n\n      let nextActiveI = activeIndex + 1; // if the we reach the last slide reset the next active index to 0\n\n      if (nextActiveI === children.length) {\n        nextActiveI = 0;\n      } // restart auto sliding\n\n\n      this.restartAutoSliding(nextActiveI);\n    };\n\n    this.prevSlide = () => {\n      const {\n        activeIndex\n      } = this.state;\n      const {\n        children\n      } = this.props; //stop auto sliding (so that when user click the prev button we can reset the timer for auto sliding)\n\n      this.stopAutoSliding(); // set direction to right because slide is coming from the left side to the view port\n\n      this.direction = \"to-right\"; // set the next active index\n\n      let nextActiveI = activeIndex - 1; // if we are at the first slide set the next active index to the last slide\n\n      if (nextActiveI < 0) {\n        nextActiveI = children.length - 1;\n      } // restart auto sliding\n\n\n      this.restartAutoSliding(nextActiveI);\n    };\n\n    this.onCarouselIndecator = index => {\n      const {\n        activeIndex\n      } = this.state; //stop auto sliding\n\n      this.stopAutoSliding(); // set the next active index\n\n      let nextActiveI = index; // set the direction of the carousel based on the clicked indicator index\n\n      if (nextActiveI < activeIndex) {\n        this.direction = \"to-right\";\n      } else {\n        this.direction = \"to-left\";\n      } // restart auto sliding\n\n\n      this.restartAutoSliding(nextActiveI);\n    };\n  }\n\n  componentDidMount() {\n    this.startAutoSliding();\n  }\n\n  componentWillUnmount() {\n    this.stopAutoSliding();\n  } // used to unify the touch and click cases\n\n\n  render() {\n    const {\n      activeIndex,\n      nextActiveIndex,\n      activeIndexClasses,\n      nextActiveIndexClasses,\n      disablePrevNext\n    } = this.state;\n    const {\n      alignIndicators,\n      alignCaption,\n      useRightLeftTriangles,\n      leftTriangleColor,\n      leftIcon,\n      rightTriangleColor,\n      rightIcon,\n      indicatorsColor,\n      interactionMode,\n      children\n    } = this.props; // use it to set the indicator position based on the coming props\n\n    let indicatorPosition = \"position-center\";\n\n    if (alignIndicators === \"right\") {\n      indicatorPosition = \"position-right\";\n    } else if (alignIndicators === \"left\") {\n      indicatorPosition = \"position-left\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-slider-wrapper\",\n      style: {\n        cursor: interactionMode === \"swipe\" ? \"pointer\" : \"\"\n      },\n      onMouseDown: e => {\n        if (this.interactionMode !== \"swipe\") {\n          return;\n        }\n\n        this.getSetXCoordinate(e);\n      },\n      onTouchStart: e => {\n        if (this.interactionMode !== \"swipe\") {\n          return;\n        }\n\n        this.getSetXCoordinate(e);\n      },\n      onMouseUp: e => {\n        if (disablePrevNext || this.interactionMode !== \"swipe\") {\n          return;\n        }\n\n        this.moveSlide(e);\n      },\n      onTouchEnd: e => {\n        if (disablePrevNext || this.interactionMode !== \"swipe\") {\n          return;\n        }\n\n        this.moveSlide(e);\n      },\n      onMouseMove: e => {\n        if (this.interactionMode !== \"swipe\") {\n          return;\n        }\n\n        e.preventDefault();\n      },\n      onTouchMove: e => {\n        if (this.interactionMode !== \"swipe\") {\n          return;\n        }\n\n        e.preventDefault();\n      },\n      children: [children.map((el, i) => {\n        let classes = \"\";\n\n        if (i === activeIndex) {\n          classes = activeIndexClasses.join(\" \");\n        } else if (i === nextActiveIndex) {\n          classes = nextActiveIndexClasses.join(\" \");\n        }\n\n        const swipeClass = interactionMode === \"swipe\" ? \"swipe\" : \"\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `carousel-slide ${classes} ${swipeClass}`,\n          style: {\n            textAlign: alignCaption\n          } // the following events to pause the auto slide on hover\n          ,\n          onMouseEnter: () => {\n            if (this.interactionMode !== \"hover\") {\n              return;\n            }\n\n            this.stopAutoSliding();\n          },\n          onMouseLeave: () => {\n            if (this.interactionMode !== \"hover\") {\n              return;\n            }\n\n            this.startAutoSliding();\n          },\n          children: el.props.children\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-left-arrow carousel-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: useRightLeftTriangles ? \"left-triangle\" : \"\",\n          style: {\n            borderLeftColor: useRightLeftTriangles ? leftTriangleColor : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: !useRightLeftTriangles ? \"padding-left-15\" : \"\",\n          disabled: disablePrevNext,\n          onClick: () => {\n            children.length !== 1 ? this.prevSlide() : null;\n          },\n          children: leftIcon ? leftIcon : /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 256 512\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-right-arrow carousel-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: useRightLeftTriangles ? \"right-triangle\" : \"\",\n          style: {\n            borderRightColor: useRightLeftTriangles ? rightTriangleColor : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: !useRightLeftTriangles ? \"padding-right-15\" : \"\",\n          disabled: disablePrevNext,\n          onClick: () => {\n            children.length !== 1 ? this.nextSlide() : null;\n          },\n          children: rightIcon ? rightIcon : /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 256 512\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: `carousel-indicators ${indicatorPosition}`,\n        children: children.map((el, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: i === nextActiveIndex ? \"active\" : \"\",\n          style: indicatorsColor ? {\n            borderColor: indicatorsColor,\n            backgroundColor: i === nextActiveIndex ? indicatorsColor : \"\",\n            \":hover\": {\n              backgroundColor: indicatorsColor,\n              opacity: i === nextActiveIndex ? 1 : 0.7\n            }\n          } : {},\n          onClick: () => {\n            children.length !== 1 ? this.onCarouselIndecator(i) : null;\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n\n} // used for inline styles with pseudo selectors\n// Note the following line just for codepen and if you open the devTool you will see an error. to solve this error see the next comment\n\n\nSlideShow = Radium(SlideShow); // to use it in your app replace the previous line with the following\n// - export default Radium(SlideShow);\n\nconst app = /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"text-center container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"React Slide show\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(SlideShow, {\n    autoPlay: true,\n    activeSlideDuration: 3000,\n    interactionMode: \"swipe\",\n    alignCaption: \"center\",\n    alignIndicators: \"center\",\n    indicatorsColor: \"#fff\",\n    useRightLeftTriangles: true,\n    rightTriangleColor: \"#fff\",\n    leftTriangleColor: \"#fff\",\n    rightIcon: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 256 512\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this),\n    leftIcon: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 256 512\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://picsum.photos/id/1/1280/500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-caption\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"carousel-caption-title\",\n          children: \"Frist title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"carousel-caption-subtitle\",\n          children: \"First subtitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://picsum.photos/id/234/1280/500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-caption\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"carousel-caption-title\",\n          children: \"Second title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"carousel-caption-subtitle\",\n          children: \"Second subtitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://picsum.photos/id/790/1280/500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-caption\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"carousel-caption-title\",\n          children: \"Third title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"carousel-caption-subtitle\",\n          children: \"Third subtitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 387,\n  columnNumber: 3\n}, this);\n\nReactDOM.render(app, document.querySelector(\"#app\"));","map":{"version":3,"sources":["C:/Users/ved17/Desktop/highq/src/components/HeroCarousel.js"],"names":["SlideShow","Component","state","activeIndex","nextActiveIndex","activeIndexClasses","nextActiveIndexClasses","disablePrevNext","xCoordinate","direction","slideTimeOut","props","activeSlideDuration","animationDuration","interactionMode","unify","e","changedTouches","getSetXCoordinate","setState","clientX","moveSlide","dx","s","Math","sign","nextSlide","prevSlide","animateSliding","push","startAutoSliding","autoPlay","autoSlide","setInterval","stopAutoSliding","clearInterval","restartAutoSliding","nextAcIn","setActiveSlide","nextActiveI","setTimeout","children","length","onCarouselIndecator","index","componentDidMount","componentWillUnmount","render","alignIndicators","alignCaption","useRightLeftTriangles","leftTriangleColor","leftIcon","rightTriangleColor","rightIcon","indicatorsColor","indicatorPosition","cursor","preventDefault","map","el","i","classes","join","swipeClass","textAlign","borderLeftColor","borderRightColor","borderColor","backgroundColor","opacity","Radium","app","ReactDOM","document","querySelector"],"mappings":"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","sourcesContent":["class SlideShow extends Component {\r\n  state = {\r\n    activeIndex: 0,\r\n    nextActiveIndex: 0,\r\n    activeIndexClasses: [\"active-slide\"],\r\n    nextActiveIndexClasses: [],\r\n    disablePrevNext: false,\r\n    xCoordinate: null,\r\n  };\r\n  // used to detect slider direction when clicking the buttons to change slides\r\n  direction = \"to-left\";\r\n  // how long a slide will be displayed\r\n  slideTimeOut = this.props.activeSlideDuration\r\n    ? this.props.activeSlideDuration\r\n    : 3000;\r\n  /*will be used to reset classes after animating the transition from a slide to another\r\n        (it has to be equal to the animation duration in the css\r\n        classes [enter-to-left, exit-to-left, enter-to-right, exit-to-right])*/\r\n  animationDuration = 600;\r\n  // will be used to auto play the carousel\r\n  autoSlide;\r\n  // will be used to set the interaction mode (swipe or hover)\r\n  interactionMode = this.props.interactionMode\r\n    ? this.props.interactionMode\r\n    : \"swipe\";\r\n\r\n  componentDidMount() {\r\n    this.startAutoSliding();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stopAutoSliding();\r\n  }\r\n\r\n  // used to unify the touch and click cases\r\n  unify = (e) => (e.changedTouches ? e.changedTouches[0] : e);\r\n\r\n  // get and set the x coordinate\r\n  getSetXCoordinate = (e) =>\r\n    this.setState({ xCoordinate: this.unify(e).clientX });\r\n\r\n  // move the slide based on the swipe direction\r\n  moveSlide = (e) => {\r\n    const { xCoordinate } = this.state;\r\n    if (xCoordinate || xCoordinate === 0) {\r\n      let dx = this.unify(e).clientX - xCoordinate,\r\n        s = Math.sign(dx);\r\n      if (s < 0) {\r\n        this.nextSlide();\r\n      } else if (s > 0) {\r\n        this.prevSlide();\r\n      }\r\n    }\r\n  };\r\n\r\n  // show the next slide in the view port based on the direction\r\n  animateSliding = () => {\r\n    let activeIndexClasses = [];\r\n    let nextActiveIndexClasses = [];\r\n\r\n    // attach the following classes if the user click the next button\r\n    if (this.direction === \"to-left\") {\r\n      activeIndexClasses.push(\"active-slide\", \"exit-to-left\");\r\n      nextActiveIndexClasses.push(\r\n        \"active-slide\",\r\n        \"next-active-slide\",\r\n        \"enter-to-left\"\r\n      );\r\n    } else {\r\n      // attach the following classes if the user click the prev button\r\n      activeIndexClasses.push(\"active-slide\", \"exit-to-right\");\r\n      nextActiveIndexClasses.push(\r\n        \"active-slide\",\r\n        \"next-active-slide\",\r\n        \"enter-to-right\"\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      activeIndexClasses: activeIndexClasses,\r\n      nextActiveIndexClasses: nextActiveIndexClasses,\r\n    });\r\n  };\r\n\r\n  // start auto sliding\r\n  startAutoSliding = () => {\r\n    const { autoPlay } = this.props;\r\n\r\n    this.autoSlide = autoPlay\r\n      ? setInterval(this.nextSlide, this.slideTimeOut)\r\n      : null;\r\n  };\r\n\r\n  // stop auto sliding\r\n  stopAutoSliding = () => {\r\n    clearInterval(this.autoSlide);\r\n  };\r\n\r\n  // used to restart auto sliding when user click prev, next button or on the carousel indicator\r\n  restartAutoSliding = (nextAcIn) => {\r\n    this.setState({\r\n      nextActiveIndex: nextAcIn,\r\n      disablePrevNext: true,\r\n    });\r\n\r\n    // attach the required classes to animate the transition between slides\r\n    this.animateSliding();\r\n\r\n    // reset classes and enable prev & next btns after the animation duration\r\n    this.setActiveSlide(nextAcIn);\r\n\r\n    // restart auto sliding\r\n    this.startAutoSliding();\r\n  };\r\n\r\n  // reset classes after the animation duration and enable prev & next btns\r\n  setActiveSlide = (nextActiveI) => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        activeIndex: nextActiveI,\r\n        activeIndexClasses: [\"active-slide\"],\r\n        nextActiveIndexClasses: [],\r\n        disablePrevNext: false,\r\n      });\r\n    }, this.animationDuration);\r\n  };\r\n\r\n  nextSlide = () => {\r\n    const { activeIndex } = this.state;\r\n    const { children } = this.props;\r\n\r\n    //stop auto sliding (so that when user click the next button we can reset the timer for auto sliding)\r\n    this.stopAutoSliding();\r\n\r\n    // set direction to left because slide is coming from the right side to the view port\r\n    this.direction = \"to-left\";\r\n\r\n    // set the next active index\r\n    let nextActiveI = activeIndex + 1;\r\n\r\n    // if the we reach the last slide reset the next active index to 0\r\n    if (nextActiveI === children.length) {\r\n      nextActiveI = 0;\r\n    }\r\n\r\n    // restart auto sliding\r\n    this.restartAutoSliding(nextActiveI);\r\n  };\r\n\r\n  prevSlide = () => {\r\n    const { activeIndex } = this.state;\r\n    const { children } = this.props;\r\n\r\n    //stop auto sliding (so that when user click the prev button we can reset the timer for auto sliding)\r\n    this.stopAutoSliding();\r\n\r\n    // set direction to right because slide is coming from the left side to the view port\r\n    this.direction = \"to-right\";\r\n\r\n    // set the next active index\r\n    let nextActiveI = activeIndex - 1;\r\n\r\n    // if we are at the first slide set the next active index to the last slide\r\n    if (nextActiveI < 0) {\r\n      nextActiveI = children.length - 1;\r\n    }\r\n\r\n    // restart auto sliding\r\n    this.restartAutoSliding(nextActiveI);\r\n  };\r\n\r\n  onCarouselIndecator = (index) => {\r\n    const { activeIndex } = this.state;\r\n\r\n    //stop auto sliding\r\n    this.stopAutoSliding();\r\n\r\n    // set the next active index\r\n    let nextActiveI = index;\r\n\r\n    // set the direction of the carousel based on the clicked indicator index\r\n    if (nextActiveI < activeIndex) {\r\n      this.direction = \"to-right\";\r\n    } else {\r\n      this.direction = \"to-left\";\r\n    }\r\n\r\n    // restart auto sliding\r\n    this.restartAutoSliding(nextActiveI);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activeIndex,\r\n      nextActiveIndex,\r\n      activeIndexClasses,\r\n      nextActiveIndexClasses,\r\n      disablePrevNext,\r\n    } = this.state;\r\n\r\n    const {\r\n      alignIndicators,\r\n      alignCaption,\r\n      useRightLeftTriangles,\r\n      leftTriangleColor,\r\n      leftIcon,\r\n      rightTriangleColor,\r\n      rightIcon,\r\n      indicatorsColor,\r\n      interactionMode,\r\n      children,\r\n    } = this.props;\r\n\r\n    // use it to set the indicator position based on the coming props\r\n    let indicatorPosition = \"position-center\";\r\n\r\n    if (alignIndicators === \"right\") {\r\n      indicatorPosition = \"position-right\";\r\n    } else if (alignIndicators === \"left\") {\r\n      indicatorPosition = \"position-left\";\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"carousel-slider-wrapper\"\r\n        style={{\r\n          cursor: interactionMode === \"swipe\" ? \"pointer\" : \"\",\r\n        }}\r\n        onMouseDown={(e) => {\r\n          if (this.interactionMode !== \"swipe\") {\r\n            return;\r\n          }\r\n          this.getSetXCoordinate(e);\r\n        }}\r\n        onTouchStart={(e) => {\r\n          if (this.interactionMode !== \"swipe\") {\r\n            return;\r\n          }\r\n          this.getSetXCoordinate(e);\r\n        }}\r\n        onMouseUp={(e) => {\r\n          if (disablePrevNext || this.interactionMode !== \"swipe\") {\r\n            return;\r\n          }\r\n          this.moveSlide(e);\r\n        }}\r\n        onTouchEnd={(e) => {\r\n          if (disablePrevNext || this.interactionMode !== \"swipe\") {\r\n            return;\r\n          }\r\n          this.moveSlide(e);\r\n        }}\r\n        onMouseMove={(e) => {\r\n          if (this.interactionMode !== \"swipe\") {\r\n            return;\r\n          }\r\n          e.preventDefault();\r\n        }}\r\n        onTouchMove={(e) => {\r\n          if (this.interactionMode !== \"swipe\") {\r\n            return;\r\n          }\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        {/*(onMouseDown & onTouchStart) & (onMouseUp & onTouchEnd) used to detect the motion direction*/}\r\n        {/*(onMouseMove & onTouchMove) used to prevent edge from navigating the\r\n                 opposite motion direction (also sometimes on chrome)*/}\r\n        {children.map((el, i) => {\r\n          let classes = \"\";\r\n\r\n          if (i === activeIndex) {\r\n            classes = activeIndexClasses.join(\" \");\r\n          } else if (i === nextActiveIndex) {\r\n            classes = nextActiveIndexClasses.join(\" \");\r\n          }\r\n\r\n          const swipeClass = interactionMode === \"swipe\" ? \"swipe\" : \"\";\r\n\r\n          return (\r\n            <div\r\n              key={i}\r\n              className={`carousel-slide ${classes} ${swipeClass}`}\r\n              style={{ textAlign: alignCaption }}\r\n              // the following events to pause the auto slide on hover\r\n              onMouseEnter={() => {\r\n                if (this.interactionMode !== \"hover\") {\r\n                  return;\r\n                }\r\n                this.stopAutoSliding();\r\n              }}\r\n              onMouseLeave={() => {\r\n                if (this.interactionMode !== \"hover\") {\r\n                  return;\r\n                }\r\n                this.startAutoSliding();\r\n              }}\r\n            >\r\n              {el.props.children}\r\n            </div>\r\n          );\r\n        })}\r\n        {/* carousel controls*/}\r\n        <div className=\"carousel-left-arrow carousel-control\">\r\n          <div\r\n            className={useRightLeftTriangles ? \"left-triangle\" : \"\"}\r\n            style={{\r\n              borderLeftColor: useRightLeftTriangles ? leftTriangleColor : \"\",\r\n            }}\r\n          />\r\n          <button\r\n            className={!useRightLeftTriangles ? \"padding-left-15\" : \"\"}\r\n            disabled={disablePrevNext}\r\n            onClick={() => {\r\n              children.length !== 1 ? this.prevSlide() : null;\r\n            }}\r\n          >\r\n            {leftIcon ? (\r\n              leftIcon\r\n            ) : (\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\r\n                <path d=\"M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z\" />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n        <div className=\"carousel-right-arrow carousel-control\">\r\n          <div\r\n            className={useRightLeftTriangles ? \"right-triangle\" : \"\"}\r\n            style={{\r\n              borderRightColor: useRightLeftTriangles ? rightTriangleColor : \"\",\r\n            }}\r\n          />\r\n          <button\r\n            className={!useRightLeftTriangles ? \"padding-right-15\" : \"\"}\r\n            disabled={disablePrevNext}\r\n            onClick={() => {\r\n              children.length !== 1 ? this.nextSlide() : null;\r\n            }}\r\n          >\r\n            {rightIcon ? (\r\n              rightIcon\r\n            ) : (\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\r\n                <path d=\"M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z\" />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        </div>\r\n        {/*carousel indicators*/}\r\n        <ol className={`carousel-indicators ${indicatorPosition}`}>\r\n          {children.map((el, i) => (\r\n            <li\r\n              key={i}\r\n              className={i === nextActiveIndex ? \"active\" : \"\"}\r\n              style={\r\n                indicatorsColor\r\n                  ? {\r\n                      borderColor: indicatorsColor,\r\n                      backgroundColor:\r\n                        i === nextActiveIndex ? indicatorsColor : \"\",\r\n                      \":hover\": {\r\n                        backgroundColor: indicatorsColor,\r\n                        opacity: i === nextActiveIndex ? 1 : 0.7,\r\n                      },\r\n                    }\r\n                  : {}\r\n              }\r\n              onClick={() => {\r\n                children.length !== 1 ? this.onCarouselIndecator(i) : null;\r\n              }}\r\n            />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// used for inline styles with pseudo selectors\r\n// Note the following line just for codepen and if you open the devTool you will see an error. to solve this error see the next comment\r\nSlideShow = Radium(SlideShow);\r\n// to use it in your app replace the previous line with the following\r\n// - export default Radium(SlideShow);\r\n\r\nconst app = (\r\n  <div className=\"text-center container\">\r\n    {/*slideshow properties:\r\n    - autoPlay => can be ture, false (default: false)\r\n    - activeSlideDuration => can be in milliseconds (default: 3000)\r\n    - interactionMode => can be:\r\n    (swipe => change slides by swiping to right or left) or\r\n    (hover => pause a slide on hover)\r\n    (default is swipe)\r\n    - alignCaption => can be center, left, right (default: center)\r\n    - alignIndicators => can be center, left, right (default: center)\r\n    - indicatorsColor => allows you to change the indicators color (default: #fff) \r\n    - useRightLeftTriangles => can be true or false (defalut: false) \r\n    - rightTriangleColor or leftTriangleColor => set the background color of the right and the left triangles (default: #fff)\r\n    - rightIcon or leftIcon => set the right or left icon (it can be \"svg\" or \"fontawesome icon\") if you want to change the color use inline styles on the icon as follow:\r\n    (for svg) =>  style={{fill: \"#000\"}} defalut is black\r\n    (for fontawesome) => style={{color: \"#000\"}} default is black (don't forget to add fontawesome to your project) */}\r\n    <h3>React Slide show</h3>\r\n    <SlideShow\r\n      autoPlay={true}\r\n      activeSlideDuration={3000}\r\n      interactionMode=\"swipe\"\r\n      alignCaption=\"center\"\r\n      alignIndicators=\"center\"\r\n      indicatorsColor=\"#fff\"\r\n      useRightLeftTriangles={true}\r\n      rightTriangleColor=\"#fff\"\r\n      leftTriangleColor=\"#fff\"\r\n      rightIcon={\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\r\n          <path d=\"M24.707 38.101L4.908 57.899c-4.686 4.686-4.686 12.284 0 16.971L185.607 256 4.908 437.13c-4.686 4.686-4.686 12.284 0 16.971L24.707 473.9c4.686 4.686 12.284 4.686 16.971 0l209.414-209.414c4.686-4.686 4.686-12.284 0-16.971L41.678 38.101c-4.687-4.687-12.285-4.687-16.971 0z\" />\r\n        </svg>\r\n      }\r\n      leftIcon={\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\r\n          <path d=\"M231.293 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L70.393 256 251.092 74.87c4.686-4.686 4.686-12.284 0-16.971L231.293 38.1c-4.686-4.686-12.284-4.686-16.971 0L4.908 247.515c-4.686 4.686-4.686 12.284 0 16.971L214.322 473.9c4.687 4.686 12.285 4.686 16.971-.001z\" />\r\n        </svg>\r\n      }\r\n    >\r\n      <div>\r\n        <img src=\"https://picsum.photos/id/1/1280/500\" />\r\n        <div className=\"carousel-caption\">\r\n          <h3 className=\"carousel-caption-title\">Frist title</h3>\r\n          <p className=\"carousel-caption-subtitle\">First subtitle</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <img src=\"https://picsum.photos/id/234/1280/500\" />\r\n        <div className=\"carousel-caption\">\r\n          <h3 className=\"carousel-caption-title\">Second title</h3>\r\n          <p className=\"carousel-caption-subtitle\">Second subtitle</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <img src=\"https://picsum.photos/id/790/1280/500\" />\r\n        <div className=\"carousel-caption\">\r\n          <h3 className=\"carousel-caption-title\">Third title</h3>\r\n          <p className=\"carousel-caption-subtitle\">Third subtitle</p>\r\n        </div>\r\n      </div>\r\n    </SlideShow>\r\n  </div>\r\n);\r\n\r\nReactDOM.render(app, document.querySelector(\"#app\"));\r\n"]},"metadata":{},"sourceType":"module"}